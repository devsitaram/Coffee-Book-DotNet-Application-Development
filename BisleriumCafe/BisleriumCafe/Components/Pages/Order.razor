@page "/order/{CoffeeName}/{CoffeePrice}"

<body>
    <form class="row g-3" @onsubmit="CoffeeOrder">
        <div class="container">
            <h2>Order Coffee</h2>
            <div class="coffee-details">

                <label for="coffeeName">Coffee Name:</label>
                <input id="coffeeName" class="form-control" readonly @bind="CoffeeName" />

                <label for="coffeePrice">Coffee Price:</label>
                <input id="coffeePrice" class="form-control price-input" readonly @bind="ParseCoffeePrice" />
                <br />

                <div class="add">
                    <div class="add-in-input">
                        <label for="add">Add in flavors</label>
                        <div class="add-in-input">
                            <select id="add-ins" class="form-select" @onchange="(args) => CalculateTotalCoffeePrice(args)">
                                @foreach (var addIn in listOfAddIns)
                                {
                                    <option value="@addIn.AddPrice">@($"{addIn.AddName} - Rs {addIn.AddPrice}")</option>
                                }
                            </select>
                        </div>
                    </div>
                </div><br />

                <div>
                    <label for="customerNumber">Customer Number:</label>
                    <input id="customerNumber" class="form-control" type="number" inputmode="numeric" maxlength="10" @bind="CustomerNumber" /><br />

                    <label for="sugar">Get 15% discount after 15 days</label>

                    @if (ShowDiscount)
                    {
                        <label class="price-display">Order times: @TotalFrequency</label>
                        <div class="price-display">Rs.@DiscountPrice</div>
                    }
                    else
                    {
                        <div class="frequency-display">Total @TotalFrequency times purchase</div>
                    }
                    <br />
                    <label for="sugar">Total Price:</label>
                    <div class="price-display">Total Price Rs.@TotalPrice</div><br />

                    <button class="btn btn-primary" type="submit" @onclick="GetDiscountForCustomer">Confirm</button>
                </div>
            </div><br />
            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert alert-success" role="alert">
                    @message
                </div>
            }
        </div>
    </form>
</body>

@code {
    [Parameter]
    public string CoffeeName { get; set; }

    [Parameter]
    public string CoffeePrice { get; set; }

    private string AddFlavorName { get; set; }

    private double AddFlavorPrice { get; set; }

    public long CustomerNumber { get; set; }

    public double ParseCoffeePrice { get; set; }

    public double DiscountPrice { get; set; }

    public double TotalPrice { get; set; }

    private List<CoffeeAddIn> listOfAddIns;

    private CoffeeAddIn addInsModel = new();

    private string message = "";

    private int TotalFrequency { get; set; }

    private bool ShowDiscount = false;
    private bool DiscountVerify = false;

    protected override void OnInitialized()
    {
        try
        {
            listOfAddIns = CoffeeAddInServices.GetAllAddIn();
            if (double.TryParse(CoffeePrice, out double parsedPrice))
            {
                ParseCoffeePrice = parsedPrice;
            }
            else
            {
                ParseCoffeePrice = 0;
            }
            // Initial calculation
            TotalPrice = ParseCoffeePrice;
        }
        catch (Exception ex)
        {
            listOfAddIns = new List<CoffeeAddIn>();
        }
    }

    private void CalculateTotalCoffeePrice(ChangeEventArgs e)
    {
        if (double.TryParse(e.Value.ToString(), out double addInPrice))
        {
            // Assuming listOfAddIns contains CoffeeAddIn objects with AddName and AddPrice properties
            var selectedAddIn = listOfAddIns.FirstOrDefault(addIn => addIn.AddPrice.ToString() == e.Value.ToString());

            if (selectedAddIn != null)
            {
                AddFlavorName = selectedAddIn.AddName;
                AddFlavorPrice = selectedAddIn.AddPrice;
                TotalPrice = ParseCoffeePrice + AddFlavorPrice - DiscountPrice;
            }
        }
    }

    private void CoffeeOrder()
    {
        double price;
        if (double.TryParse(CoffeePrice, out price))
        {
            var response = OrderService.CreateNewOrder(CoffeeName, price, AddFlavorName, AddFlavorPrice, CustomerNumber, TotalPrice);
            if (response == "success")
            {
                message = $"{CoffeeName} order successfully";
            }
            else
            {
                message = response;
            }
        }
        else
        {
            message = "The price in not string";   
        }
    }

    private void GetDiscountForCustomer()
    {
        if (CustomerNumber == 0)
        {
            if (!DiscountVerify)
            {
                DiscountVerify = true;
                ShowDiscount = true;
                TotalFrequency = CustomerService.DiscountForCustomer(CustomerNumber);
                if (TotalFrequency >= 15)
                {
                    DiscountPrice = (TotalPrice * 15 / 100);
                    TotalPrice = ParseCoffeePrice + AddFlavorPrice - DiscountPrice;
                    message = $"Discount applied: Rs.{DiscountPrice}";
                }
            }
        }
        else
        {
            ShowDiscount = false;
            message = "Please enter a customer number.";
        }
    }
}


<style>
    .container {
        margin: 20px auto;
        max-width: 600px;
        padding: 0 20px;
    }

    .coffee-details {
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .price-input {
        color: #333;
        font-weight: bold;
    }

    .price-display {
        margin-top: 10px;
        padding: 8px;
        background-color: #f0f0f0;
        font-weight: bold;
    }
</style>