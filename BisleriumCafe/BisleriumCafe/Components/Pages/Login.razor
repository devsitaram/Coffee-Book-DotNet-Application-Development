@page "/login"
@inject NavigationManager NavManager
@layout EmptyLayout

<body>
    <form class="row g-3" @onsubmit="LoginHandler">
        <div class="login-container d-flex align-items-center justify-content-center vh-100">
            <div class="card shadow-lg p-3 mb-5 bg-white rounded">
                <div class="card-body">
                    <h1 class="card-title text-center mb-5">Bislerium Coffee Station</h1>
                    <div class="form-group">
                        <label class="form-label">Role</label>
                        <select class="form-select" id="roleSelect" @bind="role">
                            @foreach (var roles in Enum.GetValues(typeof(BisleriumCafe.Data.Enums.Role)))
                            {
                                <option value="@roles">@roles</option>
                            }
                        </select ><br />

                        <label class="form-label">Password</label>
                        <input class="form-control" @bind="password" /> <br />
                    
                        <div class="sidebar align-content-center">
                            <button type="submit" class="btn btn-primary btn-lg btn-lg w-100" onclick="@LoginHandler">Log In</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</body>

@code {
    private bool showDefaultCredentials { get; set; }
    private Role role { get; set; }
    private string password { get; set; }
    private string errorMessage = "";

    protected override void OnInitialized()
    {
        try
        {
            password = UserServices.Password;
            role = Role.Admin;
            var user = UserServices.Login(role, password);
            showDefaultCredentials = user.HasInitialPassword;
        }
        catch
        { 
            errorMessage = "User is not available!";
        }
        errorMessage = "";
    }

    private void LoginHandler()
    {
        try
        {
            errorMessage = "";
            User user;
            UserServices.Login(role, password);
            NavManager.NavigateTo(UserServices.CurrentUser.HasInitialPassword ? "/change-password" : "/");

            if (UserServices.CurrentUser != null)
            {
                errorMessage = "user exists";
            }
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}